name: Build
on: [push, pull_request]
jobs:
  build-ubuntu:
    name: libSMCE - Linux (${{ matrix.compiler.name }} & ${{ matrix.boost }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: GCC 10
            c: gcc-10
            cxx: g++-10
          - name: Clang/LLVM 10
            c: clang-10
            cxx: clang++-10
        boost: [1.74.0, 1.75.0]
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v2
        with:
          path: boost_root
          key: ${{ runner.os }}-boost-${{ matrix.boost }}
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          export BOOST_ARK_BASENAME=$(echo ${{ matrix.boost }} | sed "s/^/boost_/;s/\./_/g")
          wget -qOboost_src.tgz https://dl.bintray.com/boostorg/release/${{ matrix.boost }}/source/$BOOST_ARK_BASENAME.tar.gz
          tar -xzf ./boost_src.tgz
          mkdir boost_root
          cd $BOOST_ARK_BASENAME
          ./bootstrap.sh --prefix=../boost_root/
          ./b2 link=static install
          cd ../
      - name: Check deps
        run: |
          sudo apt install ninja-build
          ninja --version # technically not a dependency, but used to speedup builds
          cmake --version
          brew install arduino-cli
          arduino-cli version
      - name: CMake configure
        run: |
          export BOOST_ROOT="$(pwd)/boost_root"
          mkdir build
          cmake -G Ninja -S ./ -B ./build
      - name: CMake build
        run: cmake --build ./build

  build-macos:
    name: libSMCE - macOS (${{ matrix.compiler.name }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: GCC 10
            c: gcc-10
            cxx: g++-10
          - name: Clang/LLVM 11
            c: clang-11
            cxx: clang++-11
#         - name: AppleClang 12
#           c: clang
#           cxx: clang++
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - uses: actions/checkout@v2
      - name: Check deps
        run: |
          brew install ninja boost arduino-cli
          ninja --version # technically not a dependency, but used to speedup builds
          cmake --version
          arduino-cli version
      - name: CMake configure
        run: |
          [ "$CC" = "clang-11" ] && export CC="$(brew --prefix llvm)/bin/clang -stdlib=libc++ -nostdinc++ -I/usr/local/opt/llvm/include/c++/v1 -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
          [ "$CXX" = "clang++-11" ] && export CXX="$(brew --prefix llvm)/bin/clang++ -stdlib=libc++ -nostdinc++ -I/usr/local/opt/llvm/include/c++/v1 -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
          mkdir build
          cmake -G Ninja -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -S ./ -B ./build
      - name: CMake build
        run: cmake --build ./build